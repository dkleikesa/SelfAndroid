本项目旨在通过手机传感器信息，判断用户的运动状态(支持4种状态)，是地图类应用，一个比较重要的功能。其原理是：智能手机一般都配有加速度传感器，陀螺仪，磁力计等传感器，用户在不同的运动状态时，传感器会输出不同信息，我们通过算法对传感器信息进行特征提取，然后通过机器学习算法进行分类，最终识别出用户的运动状态。

参与传感器训练数据抓取，研读论文提取数据特征，数据特征筛选，不同分类器的训练以及效果对比，以及最终的算法工程化以及落地。


在完成现有的车载视频设备功能的基础上，增加了播放器状态统一反馈功能，在服务端可以实时看到播放器画面，以及播放器的各种状态，改变以往靠人去检查的方式，节约人力。

FLP开发维护
FLP是android系统最新的定位架构，预装于厂商的手机产品中，为手机提供定位能力的支持。其包含了运动状态检测，geofence，低功耗轨迹记录，融合定位等功能，能为各种定位场景，提供高精度、低功耗的定位服务。
负责低功耗轨迹记录，geofence模块的设计开发工作，同时参与了手机运动状态检测模块的设计开发，工作过程中有申请发明专利两项.

手机频率归一化。不同手机采样频率不同，需要按照时间归一化

滑动平均和中值滤波最终被去掉，因为对结果影响不明显

难点：随机动作，会对分类器产生比较大的影响，因此需要提前排除在外。时间短，运动剧烈，加速度计 读数非常大
  加速度计变化率：
    一组数据有n个，求每个数据三轴向量的模长，最终求出n-1个变化量，对n-1个变量分m组，每组求模长均值，变化率 = 最大组模长/组模长中值，必须算一个比值，因为传感器量程不同数据不便于统一。分子不用最小值，因为最小值不稳定，放在分子对数据影响太大，分子不用均值，因为一组数据变化都很大，均值就很大，那么比值很小，
  旋转率：三轴的和除以三轴的向量模长
  
利用上面两个特征去掉随机运动，不用磁场变化率，因为跟手机运动没关系，主要是手机所处的环境情况的变化。

特征：
加速度：
  时域：均值，方差，穿越均值点数目，中值，加速度的水平分量，z轴偏角，
  频域：傅里叶变化，主频和主频占比，power信息熵
  实验： 加速度超过均值的次数  
  
陀螺仪：
  时域：均值，方差，穿越均值点，
   频域：傅里叶变换，计算主频和主频占比，power信息熵
   
   
离散傅里叶变换：
   输入一组采样点，输出一组复数，复数的模长，就是该频率下的信号强度(幅值)，复数的tan值，就是该频率下信号的相位。
   fft的分辨率：假设采样频率50hz，采集5s，共250个点，那么分辨率为，50/250 = 0.2hz。
   即FFT输入250个采样点，输出250个复数，第一个点事0Hz分量，第二个点事0.2分量。。。。，以此类推，最后一个点为50hz分量
   
   假设采样频率为Fs，采样点数为N，做FFT之后，某一点n（n从1开始）表示的频率为：Fn=(n-1)*Fs/N；该点的模值除以N/2就是对应该频率下的信号的幅度（对于直流信号是除以N）
   
   可以根据模长，算出那些频率是主频，然后当做选取的特征值
   
  
   
分类器：逻辑回归(softmax)，随机森林，KNN，（实现简单，计算量小），SVM（模型需要另行存储，而且逻辑复杂）
随机森林效果最好。
离线训练好模型，然后下发到手机使用。

随机森林参数：
n_estimators	随机森林中决策树的数量	20
max_depth	    决策树最大深度	12
max_features	每个节点随机选用的特征数量上限	7
class_weight	是否平衡不同类的数据数量	‘balanced’


自学andrew ng coursera上的机器学习课程，并完成所有作业。
完成google 在Udacity上的深度学习课程，并完成所有作业。
完成tensorflow官网的基础培训，包含tensorflow API以及tensorboard使用
正在研读google出品的《深度学习》电子书，加深对深度学习的理解。


photoOCR 
按照andrew ng课程里面讲解的方法实现，包含文字定位，文字分割和文字识别三部分，利用SVM作为分类器，使用MSCOCO数据库和自己创建数据库，可以做到定位并识别英文字母30.1%

kaggle Digit Recognizer 竞赛成绩：0.99400 排名167/1696
使用tensorflow为深度学习框架，模型为：2层卷积+2层pool+2层全连接+dropout+L2正则化+softmax分类，最终获得0.99400 的准确率


1.熟悉常用的机器学习算法：线性回归，逻辑回归，神经网络，SVM，KNN，K-means
2.熟悉常见的降维方法：PCA，T-SNE
3.熟悉常见的深度学习模型。CNN，RNN，LSTM
4.熟悉基于内容的推荐系统，协同过滤算法。
5.熟悉深度学习常见正则化方法:L1,L2
6.熟悉tensorflow和tensorboard的用法。
7.熟悉常见的图像处理模型（CNN+pool+dropout）以及自然语言处理常见模型(word2vec,语言生成模型)



